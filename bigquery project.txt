-- Big project for SQL
-- Link instruction: https://docs.google.com/spreadsheets/d/1WnBJsZXj_4FDi2DyfLH1jkWtfTridO2icWbWCh7PLs8/edit#gid=0


-- Query 01: calculate total visit, pageview, transaction and revenue for Jan, Feb and March 2017 order by month
#standardSQL
SELECT
   	format_date("%Y%m", parse_date("%Y%m%d", date)) AS month, 
	count(fullVisitorId) AS visits, 
	sum(totals.pageviews) AS pageviews, 
	sum(totals.transactions) AS transactions, 
	sum(totals.totalTransactionRevenue) / pow(10, 6) AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
WHERE _table_suffix between '20170101' and '20170331'
GROUP BY month
ORDER BY month

-- Query 02: Bounce rate per traffic source in July 2017
#standardSQL
SELECT 
  trafficSource.source, 
  count(fullVisitorId) AS total_visits, 
  count(totals.bounces) AS total_no_of_bounces, 
  round(count(totals.bounces)*100 / count(fullVisitorId), 8) AS bouce_rate
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
GROUP BY trafficSource.source
ORDER BY count(fullVisitorId) DESC

-- Query 3: Revenue by traffic source by week, by month in June 2017
#standardSQL
WITH month AS(
SELECT 
  'Month' AS time_type,
  format_date("%Y%m", parse_date("%Y%m%d", date)) AS time,
  trafficSource.source AS source,
  sum(totals.totalTransactionRevenue) / pow(10, 6) AS revenue
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`
GROUP BY trafficSource.source, time),

week AS(
SELECT 
  'Week' AS time_type,
  format_date("%Y%W", parse_date("%Y%m%d", date)) AS time,
  trafficSource.source,
  sum(totals.totalTransactionRevenue) / pow(10, 6) AS revenue,
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`
GROUP BY trafficSource.source, time),

union_all AS(
SELECT * FROM month
UNION ALL
SELECT * FROM week)

SELECT *
FROM union_all
WHERE revenue IS NOT NULL
ORDER BY revenue desc

--Query 04: Average number of product pageviews by purchaser type (purchasers vs non-purchasers) in June, July 2017. Note: totals.transactions >=1 for purchaser and totals.transactions is null for non-purchaser
#standardSQL
WITH data AS(
SELECT *, 
       format_date("%Y%m", parse_date("%Y%m%d", date)) AS month
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
WHERE _table_suffix between '20170601' and '20170731'),

non_purchaser AS(
SELECT  month, 
        fullVisitorId, 
        sum(totals.pageviews) as pageviews_per_user
FROM data
WHERE totals.transactions is null
GROUP BY month, fullVisitorId),

avg_non_purchaser AS (
SELECT month, 
      round(avg(pageviews_per_user), 9) as avg_pageviews_non_purchase 
FROM non_purchaser
GROUP BY month),

purchaser AS(
SELECT month, 
      fullVisitorId, 
      sum(totals.pageviews) as pageviews_per_user
FROM data
WHERE totals.transactions >= 1
GROUP BY month, fullVisitorId),

avg_purchaser AS (
SELECT month, 
       round(avg(pageviews_per_user),8) as avg_pageviews_purchase from purchaser
GROUP BY month)

SELECT  p.month, 
	p.avg_pageviews_purchase, 
	n.avg_pageviews_non_purchase   
FROM avg_non_purchaser AS n 
JOIN avg_purchaser AS p on n.month = p.month
ORDER BY p.month

-- Query 05: Average number of transactions per user that made a purchase in July 2017
#standardSQL
WITH total AS(
SELECT  fullVisitorId, 
	sum(totals.transactions) as num_trans_user
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
WHERE totals.transactions is not null
GROUP BY fullVisitorId)

SELECT  '201707' as Month, 
	round(avg(num_trans_user), 9) as Avg_total_transactions_per_user
FROM total

-- Query 06: Average amount of money spent per session
#standardSQL
SELECT '201707' as Month,
	concat(
        format("%'d", cast(floor(avg(totals.totalTransactionRevenue)) as int64)),
        right(cast(round(avg(totals.totalTransactionRevenue), 2) as string), 3)
	) as avg_revenue_by_user_per_visit
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
WHERE totals.transactions is not null

-- Query 07: Products purchased by customers who purchased product A (Classic Ecommerce)
#standardSQL
WITH youtube_men AS(
SELECT DISTINCT fullVisitorId
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*` 
	CROSS JOIN unnest(hits) AS hits 
	CROSS JOIN unnest(hits.product) AS product
WHERE v2ProductName = "YouTube Men's Vintage Henley" 
	AND productRevenue is not null)

SELECT  v2ProductName, 
        sum(productQuantity)
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*` 
	CROSS JOIN unnest(hits) AS hits 
	CROSS JOIN unnest(hits.product) AS product
WHERE fullVisitorId IN (select fullVisitorId from youtube_men) 
      AND productRevenue is not null 
      AND v2ProductName != "YouTube Men's Vintage Henley" 
GROUP BY v2ProductName
ORDER BY sum(productQuantity) DESC


--Query 08: Calculate cohort map from pageview to addtocart to purchase in last 3 month. For example, 100% pageview then 40% add_to_cart and 10% purchase.
#standardSQL
WITH 
data AS(
SELECT format_date("%Y%m", parse_date("%Y%m%d", date)) AS month, *
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*` 
	CROSS JOIN unnest(hits) AS hits 
	CROSS JOIN unnest(hits.product) AS product
WHERE _table_suffix between '20170101' and '20170331'),

view AS(
SELECT  month, 
	count(v2ProductName) AS num_product_view
FROM data
WHERE eCommerceAction.action_type = "2"
GROUP BY month),

addtocart AS(
SELECT month, 
	count(v2ProductName) AS num_addtocart
FROM data
WHERE eCommerceAction.action_type = "3"
GROUP BY month),

purchase AS(
SELECT month, count(v2ProductName) AS num_purchase
FROM data
WHERE eCommerceAction.action_type = "6"
GROUP BY month)

SELECT  v.month, 
        num_product_view, 
        num_addtocart, 
        num_purchase, 
        round(num_addtocart*100 / num_product_view, 2) as add_to_cart_rate, 
        round(num_purchase*100 / num_product_view, 2) as purchase_rate
FROM view as v
JOIN addtocart as a ON v.month = a.month
JOIN purchase as p ON v.month = p.month
ORDER BY month 

